// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: services/repository/option.proto

package repository

import (
	_ "github.com/OpenSourceRobotics/api/domain"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sort order
type OrderByField_Order int32

const (
	OrderByField_ASC OrderByField_Order = 0
	OrderByField_DSC OrderByField_Order = 1
)

// Enum value maps for OrderByField_Order.
var (
	OrderByField_Order_name = map[int32]string{
		0: "ASC",
		1: "DSC",
	}
	OrderByField_Order_value = map[string]int32{
		"ASC": 0,
		"DSC": 1,
	}
)

func (x OrderByField_Order) Enum() *OrderByField_Order {
	p := new(OrderByField_Order)
	*p = x
	return p
}

func (x OrderByField_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderByField_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_services_repository_option_proto_enumTypes[0].Descriptor()
}

func (OrderByField_Order) Type() protoreflect.EnumType {
	return &file_services_repository_option_proto_enumTypes[0]
}

func (x OrderByField_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderByField_Order.Descriptor instead.
func (OrderByField_Order) EnumDescriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{5, 0}
}

// Fields option values.
type Fields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set of fields to return.
	Fields []string `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *Fields) Reset() {
	*x = Fields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fields) ProtoMessage() {}

func (x *Fields) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fields.ProtoReflect.Descriptor instead.
func (*Fields) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{0}
}

func (x *Fields) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Where option values.
type Where struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition to match.
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Where) Reset() {
	*x = Where{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Where) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Where) ProtoMessage() {}

func (x *Where) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Where.ProtoReflect.Descriptor instead.
func (*Where) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{1}
}

func (x *Where) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// MaxResults option values.
type MaxResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum number of results.
	Count uint64 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *MaxResults) Reset() {
	*x = MaxResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxResults) ProtoMessage() {}

func (x *MaxResults) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxResults.ProtoReflect.Descriptor instead.
func (*MaxResults) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{2}
}

func (x *MaxResults) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Offset option values.
type Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of results to skip before capturing values.
	Offset uint64 `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *Offset) Reset() {
	*x = Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offset) ProtoMessage() {}

func (x *Offset) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offset.ProtoReflect.Descriptor instead.
func (*Offset) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{3}
}

func (x *Offset) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// GroupBy option values.
type GroupBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to group by.
	Fields []string `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *GroupBy) Reset() {
	*x = GroupBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBy) ProtoMessage() {}

func (x *GroupBy) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBy.ProtoReflect.Descriptor instead.
func (*GroupBy) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{4}
}

func (x *GroupBy) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// OrderByField contains field sorting information.
type OrderByField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field to sort by
	Field     string             `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	SortOrder OrderByField_Order `protobuf:"varint,2,opt,name=SortOrder,proto3,enum=repository.OrderByField_Order" json:"SortOrder,omitempty"`
}

func (x *OrderByField) Reset() {
	*x = OrderByField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderByField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderByField) ProtoMessage() {}

func (x *OrderByField) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderByField.ProtoReflect.Descriptor instead.
func (*OrderByField) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{5}
}

func (x *OrderByField) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *OrderByField) GetSortOrder() OrderByField_Order {
	if x != nil {
		return x.SortOrder
	}
	return OrderByField_ASC
}

// OrderBy option values.
type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*OrderByField `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{6}
}

func (x *OrderBy) GetFields() []*OrderByField {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Preload option values.
type Preload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=Fields,proto3" json:"Fields,omitempty"`
}

func (x *Preload) Reset() {
	*x = Preload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Preload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preload) ProtoMessage() {}

func (x *Preload) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preload.ProtoReflect.Descriptor instead.
func (*Preload) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{7}
}

func (x *Preload) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Option is used to pass repository service operation options.
type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Option:
	//	*Option_Fields
	//	*Option_Where
	//	*Option_MaxResults
	//	*Option_Offset
	//	*Option_GroupBy
	//	*Option_OrderBy
	//	*Option_Preload
	Option isOption_Option `protobuf_oneof:"Option"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_repository_option_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_services_repository_option_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_services_repository_option_proto_rawDescGZIP(), []int{8}
}

func (m *Option) GetOption() isOption_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (x *Option) GetFields() *Fields {
	if x, ok := x.GetOption().(*Option_Fields); ok {
		return x.Fields
	}
	return nil
}

func (x *Option) GetWhere() *Where {
	if x, ok := x.GetOption().(*Option_Where); ok {
		return x.Where
	}
	return nil
}

func (x *Option) GetMaxResults() *MaxResults {
	if x, ok := x.GetOption().(*Option_MaxResults); ok {
		return x.MaxResults
	}
	return nil
}

func (x *Option) GetOffset() *Offset {
	if x, ok := x.GetOption().(*Option_Offset); ok {
		return x.Offset
	}
	return nil
}

func (x *Option) GetGroupBy() *GroupBy {
	if x, ok := x.GetOption().(*Option_GroupBy); ok {
		return x.GroupBy
	}
	return nil
}

func (x *Option) GetOrderBy() *OrderBy {
	if x, ok := x.GetOption().(*Option_OrderBy); ok {
		return x.OrderBy
	}
	return nil
}

func (x *Option) GetPreload() *Preload {
	if x, ok := x.GetOption().(*Option_Preload); ok {
		return x.Preload
	}
	return nil
}

type isOption_Option interface {
	isOption_Option()
}

type Option_Fields struct {
	// Fields defines the set of fields to return.
	// Passing this Option to a Repository operation overwrites any previous Fields options passed.
	Fields *Fields `protobuf:"bytes,1,opt,name=Fields,proto3,oneof"`
}

type Option_Where struct {
	// Where filters results based on passed conditions.
	// Multiple Where options can be passed to a single Repository operation. They are logically ANDed together.
	Where *Where `protobuf:"bytes,2,opt,name=Where,proto3,oneof"`
}

type Option_MaxResults struct {
	// MaxResults defines the maximum number of results for an operation that can return multiple results.
	// Passing this Option to a Repository operation overwrites any previous MaxResults options passed.
	MaxResults *MaxResults `protobuf:"bytes,3,opt,name=MaxResults,proto3,oneof"`
}

type Option_Offset struct {
	// Offset defines a number of results to skip before starting to capture values to return.
	// This Option will be ignored if the MaxResults Option is not present.
	// Passing this Option to a Repository operation overwrites any previous Offset options passed.
	Offset *Offset `protobuf:"bytes,4,opt,name=Offset,proto3,oneof"`
}

type Option_GroupBy struct {
	// GroupBy groups results based on field values.
	// Passing this Option to a Repository operation overwrites any previous GroupBy options passed.
	GroupBy *GroupBy `protobuf:"bytes,5,opt,name=GroupBy,proto3,oneof"`
}

type Option_OrderBy struct {
	// OrderBy sorts results based on fields.
	// In situations with multiple orders, they are applied in sequence.
	// Multiple OrderBy options can be passed to a single Repository operation. They are appended to any previous orders.
	OrderBy *OrderBy `protobuf:"bytes,6,opt,name=OrderBy,proto3,oneof"`
}

type Option_Preload struct {
	// Preload allows loading a single related model to have it be included in the returned value.
	// The field parameter must match the model field name exactly (case-sensitive).
	// An optional filter composed of a template and any number of values can be passed to filter preloaded results.
	// Multiple Preload options can be passed to a single Repository operation. They are appended to any previous preloads.
	Preload *Preload `protobuf:"bytes,7,opt,name=Preload,proto3,oneof"`
}

func (*Option_Fields) isOption_Option() {}

func (*Option_Where) isOption_Option() {}

func (*Option_MaxResults) isOption_Option() {}

func (*Option_Offset) isOption_Option() {}

func (*Option_GroupBy) isOption_Option() {}

func (*Option_OrderBy) isOption_Option() {}

func (*Option_Preload) isOption_Option() {}

var File_services_repository_option_proto protoreflect.FileDescriptor

var file_services_repository_option_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x05, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x0a, 0x4d, 0x61,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x20,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x21, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0x7d, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x53, 0x43,
	0x10, 0x01, 0x22, 0x3b, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x30, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22,
	0x21, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x48, 0x00, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x57,
	0x68, 0x65, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2f,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x48, 0x00, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12,
	0x2f, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x48, 0x00, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x2f, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_repository_option_proto_rawDescOnce sync.Once
	file_services_repository_option_proto_rawDescData = file_services_repository_option_proto_rawDesc
)

func file_services_repository_option_proto_rawDescGZIP() []byte {
	file_services_repository_option_proto_rawDescOnce.Do(func() {
		file_services_repository_option_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_repository_option_proto_rawDescData)
	})
	return file_services_repository_option_proto_rawDescData
}

var file_services_repository_option_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_repository_option_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_services_repository_option_proto_goTypes = []interface{}{
	(OrderByField_Order)(0), // 0: repository.OrderByField.Order
	(*Fields)(nil),          // 1: repository.Fields
	(*Where)(nil),           // 2: repository.Where
	(*MaxResults)(nil),      // 3: repository.MaxResults
	(*Offset)(nil),          // 4: repository.Offset
	(*GroupBy)(nil),         // 5: repository.GroupBy
	(*OrderByField)(nil),    // 6: repository.OrderByField
	(*OrderBy)(nil),         // 7: repository.OrderBy
	(*Preload)(nil),         // 8: repository.Preload
	(*Option)(nil),          // 9: repository.Option
	(*Filter)(nil),          // 10: repository.Filter
}
var file_services_repository_option_proto_depIdxs = []int32{
	10, // 0: repository.Where.filter:type_name -> repository.Filter
	0,  // 1: repository.OrderByField.SortOrder:type_name -> repository.OrderByField.Order
	6,  // 2: repository.OrderBy.Fields:type_name -> repository.OrderByField
	1,  // 3: repository.Option.Fields:type_name -> repository.Fields
	2,  // 4: repository.Option.Where:type_name -> repository.Where
	3,  // 5: repository.Option.MaxResults:type_name -> repository.MaxResults
	4,  // 6: repository.Option.Offset:type_name -> repository.Offset
	5,  // 7: repository.Option.GroupBy:type_name -> repository.GroupBy
	7,  // 8: repository.Option.OrderBy:type_name -> repository.OrderBy
	8,  // 9: repository.Option.Preload:type_name -> repository.Preload
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_services_repository_option_proto_init() }
func file_services_repository_option_proto_init() {
	if File_services_repository_option_proto != nil {
		return
	}
	file_services_repository_filter_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_repository_option_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Where); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderByField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Preload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_repository_option_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_repository_option_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Option_Fields)(nil),
		(*Option_Where)(nil),
		(*Option_MaxResults)(nil),
		(*Option_Offset)(nil),
		(*Option_GroupBy)(nil),
		(*Option_OrderBy)(nil),
		(*Option_Preload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_repository_option_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_repository_option_proto_goTypes,
		DependencyIndexes: file_services_repository_option_proto_depIdxs,
		EnumInfos:         file_services_repository_option_proto_enumTypes,
		MessageInfos:      file_services_repository_option_proto_msgTypes,
	}.Build()
	File_services_repository_option_proto = out.File
	file_services_repository_option_proto_rawDesc = nil
	file_services_repository_option_proto_goTypes = nil
	file_services_repository_option_proto_depIdxs = nil
}
